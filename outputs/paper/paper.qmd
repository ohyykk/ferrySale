---
title: "Uncovering Ferry Traffic Patterns: A Data-Driven Study of Toronto Island Ticket Sales and Redemptions"
author: 
  - Yingke He
thanks: "Code and data are available at: https://github.com/ohyykk/ferrySale.git"
date: 09-23-2024
date-format: long
abstract: "This study examines the ticket redemption and sales counts for the Toronto Island Ferry, analyzing time-based trends and the relationships between sales and redemptions. Statistical models are developed to predict ferry ticket usage. The results uncover seasonal trends, operational inefficiencies, and discrepancies between ticket sales and redemptions, highlighting the need for improved resource management and service adjustments to better align with fluctuating passenger demand. These findings offer insights into usage patterns, operational considerations, and suggest avenues for future research, particularly in optimizing ticketing strategies and resource allocation."
format: pdf
number-sections: true
# The toc parameter used to create a table of contents was obtained from
# Quarto documentation:
# https://quarto.org/docs/reference/formats/pdf.html
toc: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

#install.packages("here")

library(tidyverse)
library(opendatatoronto)
library(here)
library(ggplot2)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)

```


# Introduction
The Toronto Island Ferry system has long been an essential transportation link between downtown Toronto and the Toronto Islands, serving both residents and tourists. With roots tracing back to the early days of the city’s development, the ferry system reflects both historical and contemporary mobility patterns in the region. Historical accounts provided by @varga1987toronto highlight the evolution of the Toronto Islands' natural environment and its significance to the area’s biodiversity and recreation. Additionally, the potential role of ferries in urban transit systems, as explained by @kopystynski1979potential, shows their importance in enhancing urban mobility and connectivity.  

With the ticket counts for the Toronto Island Ferry and the trends in ticket redemption and sales, we can find the connections between historical developments and current usage patterns. By combining both historical and modern perspectives and including contemporary studies on ferry commuting from @roseman2020precarious, the analysis provides a comprehensive understanding of the factors influencing ferry usage. Statistical models are used to analyze ferry ticket demand while showing the seasonal fluctuations and operational challenges.

Despite the longstanding role of the Toronto Island Ferry system in connecting downtown Toronto with the Toronto Islands, there is limited research on the detailed patterns of ferry usage and the efficiency of the service. While the ferry system serves both residents and tourists, the lack of data-driven analysis makes it harder to optimize ferry operations, manage peak demand periods, and improve ticketing strategies. It is important to fill this gap because of the ferry’s dual function of accommodating daily commuters alongside a significant influx of seasonal visitors, which introduces variability in service demand. Without a comprehensive understanding of the underlying trends in ticket sales and redemptions, it becomes challenging to address inefficiencies or anticipate future operational challenges. We will address this problem by providing a detailed analysis of ticketing patterns and offering insights into how the ferry system can better meet passenger needs through data-informed decision-making.

In addition to the expected peaks during high tourism periods, this study investigates inconsistencies between tickets sold and redeemed, offering insights into potential service inefficiencies. The dual role of the Toronto Island Ferry system in accommodating both daily commuters and a large number of seasonal visitors makes it an important case study in urban transportation planning.

The remainder of this paper is structured as follows: @sec-data introduces the dataset used for the analysis, explaining the key variables and presenting key data analysis. @sec-discussion discusses the implications of the findings and potential directions for future research. Additional information is presented in the appendix at @sec-appendix. @citeR and @rohan is utilized for the coding proposes of this paper, and the data section is referenced using @sec-data.


# Data {#sec-data}

## Overview {#sec-data-overview}

The dataset used in this analysis is the 2024 installment of “Toronto Island Ferry Ticket Counts” obtained from OpenDataToronto (@R-opendatatoronto). This dataset contains information about the number of ferry tickets redeemed and sold for the Toronto Island Ferry system, which serves as a critical transportation link between downtown Toronto and the Toronto Islands.

The dataset is updated regularly and includes time-stamped entries for ticket redemptions and sales, allowing for a detailed analysis of ferry usage patterns throughout the year. The data is considered “open data” and can be utilized for various analytical purposes, provided that appropriate attribution is given..

The primary variables included in this analysis are:

**Timestamp**: The date and time when each ticket count was recorded.  
**Redemption.Count**: The number of ferry tickets redeemed during the specified time period.  
**Sales.Count**: The number of ferry tickets sold during the specified time period.  

The data was processed and analyzed using the R programming language (@citeR). The tidyverse (@citeTidyverse) and opendatatoronto packages were employed to download, clean, and prepare the dataset for analysis. The resulting cleaned dataset was then utilized to generate the visualizations and statistical analyses presented in this paper using a collection of libraries which included the following packages:

- ggplot2 [@citeGgplot2]
- knitr [@citeKnitr]
- readr [@citeReadr]
- gridExtra, solely for the propose of plot arrangements [@R-gridExtra]
- lubridate [@R-lubridate]
- here, helps to create relative file paths [@citeHere]

## Measurements

This report utilizes the Toronto Island Ferry Ticket Counts dataset published by the City of Toronto on the Open Data Portal(@toronto_ferry_ticket_counts_2024). Specifically, time-stamped records of both ticket sales and redemptions were recoreded. Every time a ticket is sold or redeemed, it represents a physical action by a ferry passenger in Toronto traveling to the Toronto Island. Actions are then recorded by the ticketing systems, which automatically records the transaction timestamp, along with the number of tickets sold and redeemed at that specific time.

This process converts individual passenger transactions into structured dataset entries, with timestamps to enable tracking over time. The data captures real-world trends such as higher ferry activity during peak tourism seasons or weekends, providing useful insights into ferry usage patterns. It enables further research to analyze passenger demand and operational trends, helping to make more effective ferry management decisions.

## Results {#sec-data-resultsk}

The raw data underwent extensive cleaning, including the removal of rows with missing values, conversion of timestamps to a uniform format, and filtering out duplicates and unrealistic values such as negative ticket counts. This process ensured a reliable foundation for subsequent analysis.

```{r}
#| echo: false
#| warning: false
#| message: false
#| results: "hide"

suppressMessages({
  suppressWarnings({
    #### Loading the Cleaned Dataset ####
    marriage_licence_packages <- search_packages("Toronto Island Ferry Ticket Counts")
    marriage_licence_resources <- marriage_licence_packages %>%
      list_package_resources()

    # Retrieve the dataset
    marriage_licence_statistics <- marriage_licence_resources[2,] %>%
      get_resource()

    # Read the cleaned data
    data <- read_csv(file = here("outputs/data/cleaned_data.csv"), 
                     show_col_types = FALSE)
  })
})

```

@tbl-cleaned_data provides a detailed snapshot of the Toronto Island Ferry ticket transactions for a specific time period. It includes a unique ID for each transaction, the Time at which each transaction occurred, the number of Tickets Redeemed, the number of Tickets Sold, and the Date of the transaction.
```{r}
#| label: tbl-cleaned_data
#| echo: false


# Load necessary libraries
library(knitr)
library(readr)

# Load the cleaned data from the CSV file (adjust the path as needed)
data <- read_csv(file = here("outputs/data/cleaned_data.csv"), show_col_types = FALSE)

# Select a segment of the data, e.g., rows 51 to 60 for illustration
segment_data <- data[51:60, ]

# Modify the data for display - create new columns for ID, Time, and Date
segment_data <- segment_data %>%
  mutate(ID = row_number() + 50,                          # Create a new ID column starting from 51
         Time = format(as.POSIXct(Timestamp), "%H:%M:%S"), # Extract Time from Timestamp
         Date = format(as.POSIXct(Timestamp), "%Y-%m-%d")) # Extract Date from Timestamp

# Select only the required columns for display in the table
table_data <- segment_data[, c("ID", "Time", "Redemption.Count", "Sales.Count", "Date")]

# Create the table using kable
kable(table_data, col.names = c('ID', 'Time', 'Tickets Redeemed', 'Tickets Sold', 'Date'), 
      align = "c", 
      caption = "Sample of cleaned Ferry Ticket Counts Data")


```

The above table shows the typical flucuations in ticket sales and redemptions throughout the day. For example, during late evening hours, we observe varying ticket redemption and sales patterns, which may correspond to changes in passenger demand as the ferry service approaches the end of its operational hours. 


```{r}
#| label: tbl-summary_stats
#| echo: false
#| results: 'asis'

# Calculate summary statistics
summary_stats <- data %>% 
  summarise(
    `Avg Redeemed` = mean(Redemption.Count, na.rm = TRUE), 
    `Avg Sold` = mean(Sales.Count, na.rm = TRUE), 
    `Max Redeemed` = max(Redemption.Count, na.rm = TRUE), 
    `Max Sold` = max(Sales.Count, na.rm = TRUE), 
    Count = n()
  )

# Create the table using kable
knitr::kable(summary_stats, col.names = c('Avg Redeemed', 'Avg Sold', 'Max Redeemed', 'Max Sold', 'Count'), 
      align = "c", caption = "Summary Statistics of Ticket Counts")


```
The summary statistics, shown in @tbl-summary_stats, provide a clear understanding of ferry ticket trends. The high volume of tickets sold and redeemed indicates strong demand for the ferry service, with the close alignment between sales and redemptions suggesting high customer engagement. On average, 46.36 tickets were sold every 15 minutes during working hours, and 48.45 tickets were redeemed, highlighting that most customers have used their tickets. The small gap between sales and redemptions implies a few no-shows or unused tickets. The maximum values of 7,216 for sales and 7,229 for redemptions demonstrate the ferry’s capacity to handle high passenger volumes, typically operating at full capacity on busy days. 

### Temporal Trends in Redemption and Sales Counts {#sec-data-temporal}

To gain an initial insight into the dataset, we plotted the trends in ticket redemption and sales counts over time. The line plot shown in @fig-linePlot1, @fig-linePlot2, @fig-linePlot3 and @fig-linePlot4 provides a clear visual representation of these trends, serving as a starting point for deeper analysis of ferry usage patterns.

The peak day analysis table below highlights the highest ferry ticket sales, often aligning with public holidays or major events, such as Aug 1 2016, and July 1 2018. On September 15, 2020, ferry sales saw a significant drop, with only 5,003 tickets sold. This decline could be due to the impact of COVID-19(@lee2021island).

```{r}

#| label: tbl-peak_day
#| echo: false       # Prevents code from being shown
#| warning: false    # Suppresses warnings
#| message: false    # Suppresses messages
#| error: false      # Suppresses errors
#| results: 'asis'   # Ensures the table result is shown without the code

# Load necessary libraries
library(dplyr)
library(lubridate)
library(knitr)

# Step 1: Check if the Timestamp column is properly parsed
data <- data %>%
  mutate(Timestamp = ymd_hms(Timestamp, quiet = TRUE)) %>%  # Quiet mode for parsing errors
  filter(!is.na(Timestamp))  # Remove rows where Timestamp conversion failed

# Step 2: Group data by Year, find the day with maximum Sales for each year
peak_day_per_year_table <- data %>%
  mutate(Year = year(Timestamp)) %>%  # Extract Year from Timestamp
  group_by(Year, Date = as.Date(Timestamp)) %>%  # Group by Year and Date
  summarise(Total_Sales = sum(Sales.Count, na.rm = TRUE), .groups = 'drop') %>%  # Summarize total sales for each day
  filter(Total_Sales > 0) %>%  # Ensure there are sales
  group_by(Year) %>%
  slice_max(order_by = Total_Sales, n = 1, with_ties = FALSE) %>%  # Find the day with maximum sales for each year
  select(Year, Peak_Day = Date, Total_Sales)  # Select relevant columns

# Step 3: Display the table using knitr::kable
kable(peak_day_per_year_table, col.names = c("Year", "Peak Day", "Total Sales"), 
      caption = "Table: Peak Day for Each Year Based on Total Sales")

```

The dataset used in this analysis provides timestamped records of ticket redemptions and sales for the Toronto Island Ferry system, allowing for a detailed time series analysis of ferry usage patterns. @fig-linePlot1 illustrates the peak day of ticket sales for each year. Understanding these peak days and their contributing factors can help in forecasting future demand and optimizing resource allocation for similar high-traffic periods.

```{r}
#| label: fig-linePlot1
#| fig-cap: Peak Day for Each Year
#| echo: false
#| warning: false
#| message: false
#| fig-width: 8
#| fig-height: 4
#| fig-pos: "H"  #fix the plot in current place when render
#| 
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(lubridate)

# Assuming 'data' has columns: 'Timestamp' and 'Sales.Count'
# Convert Timestamp column to proper datetime format and filter out NA values
data <- data %>%
  mutate(
    Timestamp = ymd_hms(Timestamp),   # Convert to datetime format
    Year = year(Timestamp),           # Extract Year
    Month = month(Timestamp, label = TRUE, abbr = TRUE),  # Extract Month (abbreviated)
    Day = day(Timestamp)              # Extract Day
  ) %>%
  filter(!is.na(Year) & !is.na(Month))  # Remove rows with NA in Year or Month

# Group the data by Year, Month, and Day, and calculate the total sales per day for each year
daily_data <- data %>%
  group_by(Year, Month, Day) %>%
  summarise(
    Total_Sales = sum(Sales.Count, na.rm = TRUE),
    .groups = 'drop'  # Ungroup after summarising
  )

# Find the peak sales day for each year
peak_day_data <- daily_data %>%
  group_by(Year) %>%
  filter(Total_Sales == max(Total_Sales)) %>%
  ungroup()

# Step 4: Define colors for each year
year_colors <- c("2015" = "#d07f7a", "2016" = "#377EB8", "2017" = "#7f9f6f", 
                 "2018" = "#984EA3", "2019" = "#FC9272", "2020" = "#EC7014", 
                 "2021" = "#A65628", "2022" = "#C51B7D", "2023" = "#FFD92F")

# Create the plot
ggplot(peak_day_data, aes(x = Month, y = Total_Sales, group = Year, color = as.factor(Year))) +  
  geom_line(size = 1.2) +   # Line plot for each year’s peak day
  geom_point(size = 3) +    # Add points for peak days
  # Set y-axis label and title
  labs(
    x = "Month",
    y = "Total Sales Count",
    color = "Year"
  ) +
  
  # Manually specify colors for each year
  scale_color_manual(values = year_colors) +
  
  # Apply minimal theme and customize axis titles
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
  )

```
 
 
@fig-linePlot1 presents the daily peak ticket sales counts for the Toronto Island Ferry system across various years, offering a clear visualization of seasonal fluctuations in ferry usage. Each line represents the total ticket sales for the busiest day of each month throughout the year, with distinct colors assigned to different years for easy comparison. Notably, the graph highlights consistent peaks in ticket sales during the summer months, especially from June to August, reflecting heightened ferry usage during the tourist season. The sharp decline in sales in 2020, evident in the orange line, corresponds to the COVID-19 pandemic's impact on public transportation and tourism activities (@urbanyi2020maritime). As restrictions eased in 2021, a gradual recovery in ticket sales is observed, depicted by the brown line, indicating a resurgence in ferry demand as tourism began to pick up in Toronto (@travel_gov_2024). This visualization not only showcases the annual variations in peak demand but also underscores the need for adaptive operational strategies to accommodate seasonal surges and unexpected disruptions.

@fig-linePlot2 shows the Redemption and Sales Counts in months over years. The graph uses dashed lines to represent the monthly sales counts and straight lines for the redemption counts. Notably, the inverted redemption counts are plotted for better visualization alongside the sales data. This figure highlights consistent seasonal patterns, with both ticket sales and redemptions peaking during the summer months, from June to August, across most years. The dip observed in 2020 reflects the significant impact of the COVID-19 pandemic on ferry operations, with reduced ferry usage compared to previous years. These trends show the importance of flexible operational planning to accommodate both predictable seasonal demand and unexpected disruptions.


```{r}
#| label: fig-linePlot2
#| fig-cap: Redemption and Sales Counts Over Time in months
#| warnings: false
#| message: false
#| echo: false
#| fig-width: 8
#| fig-height: 3.3
#| 
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(lubridate)

# Convert Timestamp column to proper datetime format and filter out NA values
data <- data %>%
  mutate(
    Timestamp = ymd_hms(Timestamp),     # Convert to datetime format
    Year = year(Timestamp),             # Extract Year
    Month = month(Timestamp, label = TRUE, abbr = TRUE)  # Extract Month (abbreviated)
  ) %>%
  filter(!is.na(Year) & !is.na(Month))  # Remove rows with NA in Year or Month

# Step 2: Group the data by Year and Month and calculate total sales and redemptions per month for each year
monthly_data <- data %>%
  group_by(Year, Month) %>%
  summarise(
    Sales.Count = sum(Sales.Count, na.rm = TRUE),
    Redemption.Count = sum(Redemption.Count, na.rm = TRUE),
    .groups = 'drop'  # Ungroup after summarising
  )

# Step 3: Determine the maximum value for symmetrical scaling
max_count <- max(max(monthly_data$Sales.Count), max(monthly_data$Redemption.Count))

# Step 4: Define colors for each year
year_colors <- c("2015" = "#d07f7a", "2016" = "#377EB8", "2017" = "#7f9f6f", 
                 "2018" = "#984EA3", "2019" = "#FC9272", "2020" = "#EC7014", 
                 "2021" = "#A65628", "2022" = "#C51B7D", "2023" = "#FFD92F")

# Step 5: Create the plot with inverted Redemption Count for bottom half visualization
ggplot(monthly_data, aes(x = Month)) +  
  # Line plot for Redemption Count (inverted)
  geom_line(aes(y = -Redemption.Count, color = as.factor(Year), group = Year), linewidth = 1.2) +
  # Line plot for Sales Count (normal)
  geom_line(aes(y = Sales.Count, color = as.factor(Year), group = Year), linetype = "dashed", linewidth = 1.2) +
  
  # Set symmetrical y-axis limits for both Sales and Redemption
  scale_y_continuous(
    limits = c(-max_count, max_count),
    breaks = seq(-max_count, max_count, by = 100000),
    labels = function(x) abs(x),  # Remove the negative signs from lower half labels
    sec.axis = sec_axis(~ -., name = "Sales Count (straight lines)")
  ) +
  
  # Add plot labels
  labs(
    y = "Redemption Count (dashed lines)",  # Y-axis for Redemption Count (inverted)
    x = "Month",             # X-axis for Month
    color = "Year"
  ) +
  
  # Manually specify colors for each year
  scale_color_manual(values = year_colors) +
  
  # Apply minimal theme and customize axis titles
  theme_minimal() +
  theme(
    axis.title.y.right = element_text(color = "black", size = 12, margin = margin(r = 10)),
    axis.title.y.left = element_text(color = "black", size = 12, margin = margin(l = 10)),
    axis.text.y.right = element_blank(),  # Hide axis values of the right y-axis
    plot.title = element_text(hjust = 0.5, size = 16),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.text.y = element_text(size = 10),
    axis.ticks.y = element_blank()
  )


```


```{r}
#| label: fig-linePlot3
#| fig-cap: Redemption and Sales Counts Over Time in 2021 and 2023
#| echo: false
#| warning: false
#| message: false
#| fig-width: 8
#| fig-height: 2.8

# Load necessary libraries
library(ggplot2)
library(dplyr)
library(lubridate)
library(gridExtra)  # To arrange plots

# Filter the data for 2021 and 2023
data_2023 <- data %>%
  mutate(Timestamp = ymd_hms(Timestamp)) %>%
  filter(year(Timestamp) == 2023)

data_2021 <- data %>%
  mutate(Timestamp = ymd_hms(Timestamp)) %>%
  filter(year(Timestamp) == 2021)

# Calculate the range for both y-axes for symmetry (using both years)
y_max <- max(max(data_2021$Sales.Count), max(data_2021$Redemption.Count),
             max(data_2023$Sales.Count), max(data_2023$Redemption.Count))

# Plot for 2023 (Hide negative values)
plot_2023 <- ggplot(data_2023, aes(x = Timestamp)) +
  geom_line(aes(y = Redemption.Count), color = "#A977A6", linewidth = 1.2) +
  geom_line(aes(y = -Sales.Count), color = "#C1A9D2", linewidth = 1.2) +
  scale_y_continuous(
    limits = c(-y_max, y_max), 
    breaks = seq(0, y_max, by = 1000),  # Only show positive labels for Redemption Count
    sec.axis = sec_axis(~ -., name = "Sales Count", breaks = seq(0, y_max, by = 1000))  # Only show positive labels for Sales Count
  ) +
  scale_x_datetime(date_breaks = "4 months", date_labels = "%b") +  # Show only 3 labels
  labs(y = "Redemption Count", x = "Month", title = "2023") +
  theme_minimal() +
  theme(
    axis.title.y.right = element_text(color = "#C1A9D2"),
    axis.title.y.left = element_text(color = "#A977A6")
  )

# Plot for 2021 (Hide negative values)
plot_2021 <- ggplot(data_2021, aes(x = Timestamp)) +
  geom_line(aes(y = Redemption.Count), color = "#F49600", linewidth = 1.2) +
  geom_line(aes(y = -Sales.Count), color = "#F9CB80", linewidth = 1.2) +
  scale_y_continuous(
    limits = c(-y_max, y_max), 
    breaks = seq(0, y_max, by = 1000),  # Only show positive labels for Redemption Count
    sec.axis = sec_axis(~ -., name = "Sales Count", breaks = seq(0, y_max, by = 1000))  # Only show positive labels for Sales Count
  ) +
  scale_x_datetime(date_breaks = "4 months", date_labels = "%b") +  # Show only 3 labels
  labs(y = "Redemption Count", x = "Month", title = "2021") +
  theme_minimal() +
  theme(
    axis.title.y.right = element_text(color = "#F9CB80"),
    axis.title.y.left = element_text(color = "#F49600")
  )

# Corrected function call
grid.arrange(plot_2021, plot_2023, ncol = 2)

```
@fig-linePlot3 compares the sales count and redemption count in year 2021 and 2023. The two side-by-side plots illustrate distinct usage patterns across these years. 

In 2021, ticket sales and redemptions were more variable, reflecting the gradual recovery from the COVID-19 pandemic as restrictions were lifted and ferry services resumed normal operations. Peaks and troughs are more pronounced, indicating fluctuating demand as public confidence in using public transportation returned. Conversely, the patterns in 2023 exhibit a more consistent trend, with a steadier increase in both ticket sales and redemptions during the summer months, reflecting a return to pre-pandemic demand levels. This comparison highlights the evolving dynamics in ferry usage, influenced by external factors such as public health measures and tourism trends.

As shown in @fig-linePlot4, the x-axis denotes the timestamps of each record, while the y-axis represents the number of tickets processed. The red line corresponds to the redemption counts, and the blue line represents the sales counts, plotted inversely to emphasize the contrast between the two trends. The symmetrical y-axis allows for a clearer comparison between peaks and troughs in both counts over time.

```{r}
#| label: fig-linePlot4
#| fig-cap: Redemption and Sales Counts Over Time in years
#| fig-pos: "H"
#| fig-width: 6
#| fig-height: 2.5
#| echo: false
#| warning: false
#| message: false

# Calculate the range for both y-axes to have a symmetrical appearance
y_max <- max(max(data$Sales.Count), max(data$Redemption.Count))

# Create the plot
ggplot(data, aes(x = Timestamp)) +
  # Line plot for Redemption Count
  geom_line(aes(y = Redemption.Count), color = "brown2", linewidth = 1.2) +
  # Line plot for Sales Count (inverted)
  geom_line(aes(y = -Sales.Count), color = "#377EB8", linewidth = 1.2) +
  
  # Set y-axis limits symmetrically and apply the secondary axis
  scale_y_continuous(
    limits = c(-y_max, y_max),
    breaks = seq(0, y_max, by = 1000),  # Show only positive values for Redemption Count
    sec.axis = sec_axis(~ -., 
                        name = "Sales Count",
                        breaks = seq(0, y_max, by = 1000))  # Show only positive values for Sales Count
  ) +
  
  # Add plot labels
  labs(
    y = "Redemption Count",  # Y-axis for Redemption Count
    x = "Years"              # X-axis for Timestamp
  ) +
  
  # Apply minimal theme and customize axis titles
  theme_minimal() +
  theme(
    # Color the right-side axis title (Sales Count) to match the Sales line
    axis.title.y.left = element_text(color = "brown3", size = 12),
    # Color the left-side axis title (Redemption Count) to match the Redemption line
    axis.title.y.right = element_text(color = "dodgerblue3", size = 12),
    # Center the title and increase font size
  )

```

The plot reveals significant variations in ferry usage over years. We observe several peaks in both redemption and sales counts, likely aligning with periods of high activity, such as weekends, holidays, or the peak tourist season during the summer months. These spikes suggest increased demand during favorable weather or event-driven occasions. Conversely, the noticeable dips in the graph may correspond to regular weekdays or off-season times, indicating lower ferry usage during these periods. This information is valuable for understanding the temporal dynamics of ferry operations and can inform better resource management and scheduling.

### Comparative Analysis of Ticket Sales and Redemptions 


The scatter plot in @fig-scatterPlot is designed to explore the relationship between ticket redemption and sales counts for the Toronto Island Ferry system. This visualization allows us to understand whether there is a correlation between the number of tickets sold and the number of tickets redeemed during the same time period.  

```{r}
#| label: fig-scatterPlot
#| fig-cap: Scatter Plot of Redemption vs Sales Count
#| echo: false
#| warning: false
#| message: false
#| fig-width: 7
#| fig-height: 3

ggplot(data, aes(x = Sales.Count, y = Redemption.Count)) +
  geom_point(alpha = 0.7, color = "#93445e") +
  labs(
    x = "Sales Count",
    y = "Redemption Count"
  ) +
  xlim(0, max(data$Sales.Count) * 1.1) +  # Adding some space to the x-axis
  ylim(0, max(data$Redemption.Count) * 1.1) +  # Adding some space to the y-axis
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5)  # Center the title
  )
```

@fig-scatterPlot displays each data point as a purple dot, where the y-axis represents the count of tickets redeemed, and the x-axis denotes the count of tickets sold. This plot provides insight into the degree of alignment between ticket sales and actual usage (redemptions).

The scatter plot shows how ticket sales and redemptions relate to each other over time. If most points lie along a diagonal line, it indicates a strong positive correlation between the two variables, suggesting that a high number of tickets sold typically corresponds to a high number of tickets redeemed. This scenario could imply effective ticket utilization, where most purchased tickets are being used for travel.


### Visual Comparison of Ticket Sales and Redemption Distribution

The box plot shown in @fig-boxPlot provides a summary of the distribution of ticket sales and redemption counts for the Toronto Island Ferry system. This visualization helps to identify the spread, central tendency, and any potential outliers in the data for both categories, offering a comparative view of the sales and redemption behaviors.
```{r}
#| label: fig-boxPlot
#| fig-cap: Box Plot of Sales and Redemption Counts
#| echo: false
#| warning: false
#| message: false
#| fig-width: 7
#| fig-height: 2.5

ggplot(data, aes(x = "Sales Count", y = Sales.Count, fill = "Sales Count")) +
  geom_boxplot(alpha = 0.5) +
  geom_boxplot(aes(x = "Redemption Count", y = Redemption.Count, fill = "Redemption Count"), alpha = 0.5) +
  scale_fill_manual(values = c("Sales Count" = "lightgreen", "Redemption Count" = "lightblue")) +
  labs(
       x = "Category",
       y = "Count",
       fill = "Legend") +
  theme_minimal() +
  theme(
    legend.position = "top",
    plot.title = element_text(hjust = 0.5)  # Center the title
  )
```
@fig-boxPlot illustrates two box plots side by side: one for sales counts (light blue) and the other for redemption counts (light green). Each box plot provides a visual summary of the data distribution, highlighting the median, quartiles, and any outliers for each category.

The box plots reveal key differences and similarities in the distribution of sales and redemption counts. The horizontal line inside each box represents the median count, providing a measure of central tendency. The top and bottom edges of the box denote the interquartile range (IQR), which captures the middle 50% of the data. The "whiskers" extending from the box show the range of values within 1.5 times the IQR from the first and third quartiles, while any points beyond these whiskers are considered outliers.


# Discussion {#sec-discussion}


In @sec-data-temporal, the time series analysis of ticket sales and redemptions (Figure @fig-linePlot1, @fig-linePlot2, @fig-linePlot3 and  @fig-linePlot4 ) revealed clear seasonal patterns, with pronounced peaks during the warmer months. This trend aligns with the historical and cultural significance of the Toronto Islands as a recreational destination, as documented by @varga1987toronto. The increased demand during these periods suggests that the ferry system plays a crucial role in supporting both tourism and local leisure activities. These seasonal fluctuations underscore the need for effective resource management and scheduling to accommodate surges in passenger volume during peak times.


The scatter plot analysis in Section 2.3 (@fig-scatterPlot) demonstrated a generally positive correlation between ticket sales and redemptions, suggesting that most tickets purchased are used. However, discrepancies where sales exceed redemptions could be linked to bulk purchases, advanced ticket sales, or unredeemed tickets due to factors like adverse weather conditions. This observation is consistent with the analysis by @kopystynski1979potential, who highlighted the complexities of integrating ferry systems into urban transit networks. Understanding these discrepancies is critical for improving ticketing policies and service offerings to better match supply with demand.


The box plot analysis in Section 2.4 (Figure @fig-boxPlot) provided a comparative view of the variability in sales and redemption counts. The presence of outliers, particularly during periods of high sales but lower-than-expected redemptions, could indicate anomalies such as large-scale events or disruptions in service. Such variability highlights the need for a more robust system to handle unexpected fluctuations in demand, as well as a deeper understanding of passenger behavior. This finding resonates with the work of @roseman2020precarious, who explored the unpredictable nature of ferry commutes and the challenges faced by passengers in adapting to these changes.

## Weaknesses and next steps
Despite the insights gained, several limitations in the current analysis should be addressed. First, the dataset does not capture the full spectrum of ticket usage behavior, such as the impact of promotional offers or the use of multi-ride passes, which could lead to an overestimation or underestimation of actual ferry usage. Additionally, the analysis does not incorporate external factors such as weather conditions or special events that significantly influence ferry operations, as noted in prior studies like @mcilwraith1984transportation.

To address these limitations, future research should consider incorporating supplementary data sources, such as weather information, event schedules, and passenger feedback, to provide a more comprehensive view of the factors affecting ferry usage. Furthermore, a comparative study with other modes of transportation in Toronto could provide valuable insights into the role of the ferry system within the broader urban transit network. This would help identify areas for service improvement and inform strategies to enhance passenger experience and operational efficiency.

While the analysis provides valuable insights, there are some limitations that should be acknowledged. The dataset does not account for external variables such as weather conditions or special events, which may also significantly impact ferry usage. Additionally, the data is limited to ticket counts and does not capture other relevant factors such as passenger demographics or satisfaction levels.

\newpage

\appendix

# Appendix {#sec-appendix}

## Dataset and Graph Sketches {#sec-appendix-sketches}

Sketches depicting both the desired dataset and the graphs generated in this analysis are available in the GitHub Repository.

## Data Cleaning {#sec-appendix-cleaning}

The raw FerrySale dataset underwent several cleaning steps to ensure its accuracy and usability for analysis. Initially, all rows with missing values were removed, followed by converting the Timestamp column to a standardized date-time format for consistent time series analysis. Duplicate entries were identified and eliminated to prevent inflated ticket counts. Additionally, transactions with unrealistic values, such as negative counts for ticket redemptions or sales, were filtered out. The resulting cleaned dataset, saved as cleaned_data.csv, provided a reliable foundation for the statistical analyses and visualizations presented in this paper.

\newpage

# References {#sec-references}

